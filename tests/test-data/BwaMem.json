{
    "$$type": "app/tool/docker",
    "wrapper_id": "sbg_bwa.bwamem.wrapper.BwaMem",
    "docker_image_ref": {
        "image_id": "a019a90500aa39fd",
        "image_repo": "images.sbgenomics.com/sevenbridges/sbg_bwa",
        "image_tag": "a019a90500aa39fd"
    }, 
    "schema": {
        "$$type": "schema/app/sbgsdk",
        "inputs": [
            {
                "description": "Read sequence (or the first mate of a paired end read)", 
                "required": false,
                "list": true,
                "id": "read", 
                "types": [
                    "fastq"
                ], 
                "name": "Read sequence"
            }, 
            {
                "description": "Reference sequence to which to align the reads", 
                "required": false, 
                "list": false, 
                "id": "reference", 
                "types": [
                    "fasta"
                ], 
                "name": "FASTA Reference"
            }
        ], 
        "params": [
            {
                "category": "Algorithm options", 
                "description": "Matches shorter than INT will be missed. The alignment speed is usually insensitive to this value unless it significantly deviates 20. [default: 19]", 
                "min": null, 
                "default": 19, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "min_seed", 
                "condition": null, 
                "name": "Minimum seed length."
            }, 
            {
                "category": "Algorithm options", 
                "description": "Band width in the banded alignment [default: 100]", 
                "min": null, 
                "default": 100, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "bandwidth", 
                "condition": null, 
                "name": "Band width for banded alignment."
            }, 
            {
                "category": "Algorithm options", 
                "description": "Stop extension when the difference between the best and the current extension score is above |i-j|*A+INT, where i and j are the current positions of the query and reference, respectively, and A is the matching score. Z-dropoff not only avoids unnecessary extension, but also reduces poor alignments inside a long good alignment. [default: 100]", 
                "min": null, 
                "default": 100, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "dropoff", 
                "condition": null, 
                "name": "Off-diagonal X-dropoff."
            }, 
            {
                "category": "Algorithm options", 
                "description": " This is a key heuristic parameter for tuning the performance. Larger value yields fewer seeds, which leads to faster alignment speed but lower accuracy. [default: 1.5]", 
                "min": null, 
                "default": 1.5, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "float", 
                "id": "trigger_reseeding", 
                "condition": null, 
                "name": "Trigger re-seeding for a MEM longer than minSeedLen*FLOAT."
            }, 
            {
                "category": "Algorithm options", 
                "description": "Discard a MEM if it has more than INT occurrence in the genome. This is an insensitive parameter. [default: 500]",
                "min": null, 
                "default": 500, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "threshold_occurrences",
                "condition": null, 
                "name": "Skip seeds with more than INT occurrences."
            }, 
            {
                "category": "Algorithm options", 
                "description": "Drop chains shorter than FLOAT fraction of the longest overlapping chain.", 
                "min": null, 
                "default": 0.5, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "float", 
                "id": "chain_drop", 
                "condition": null, 
                "name": "Drop chain fraction"
            }, 
            {
                "category": "Algorithm options", 
                "description": "Discard a chain if seeded bases shorter than INT.", 
                "min": null, 
                "default": 0, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "chain_discard", 
                "condition": null, 
                "name": "Drop chain length"
            }, 
            {
                "category": "Algorithm options", 
                "description": "Perform at most INT rounds of mate rescues for each read.", 
                "min": null, 
                "default": 50, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "mate_rescues", 
                "condition": null, 
                "name": "Mate rescue rounds"
            }, 
            {
                "category": "Algorithm options", 
                "description": "Skip mate rescue", 
                "default": false, 
                "required": false, 
                "list": false, 
                "type": "boolean", 
                "id": "skip_mate_rescue", 
                "condition": null, 
                "name": "Skip mate rescue."
            }, 
            {
                "category": "Algorithm options", 
                "description": "In the paired-end mode, perform SW to rescue missing hits only but do not try to find hits that fit a proper pair.", 
                "default": false, 
                "required": false, 
                "list": false, 
                "type": "boolean", 
                "id": "skip_mate_pairing", 
                "condition": null, 
                "name": "Skip pairing; mate rescue performed unless -S also in use."
            }, 
            {
                "category": "Algorithm options", 
                "description": "Discard full-length exact matches", 
                "default": false, 
                "required": false, 
                "list": false, 
                "type": "boolean", 
                "id": "exact_matches", 
                "condition": null, 
                "name": "Discard exact matches"
            }, 
            {
                "category": "Algorithm options", 
                "description": "Score for a sequence match. [default: 1]", 
                "min": null, 
                "default": 1, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "match_score", 
                "condition": null, 
                "name": "Score for a sequence match."
            }, 
            {
                "category": "Algorithm options", 
                "description": "Penalty for a mismatch. [default: 4]", 
                "min": null, 
                "default": 4, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "mismatch_penalty", 
                "condition": null, 
                "name": "Penalty for a mismatch."
            }, 
            {
                "category": "Algorithm options", 
                "description": "Gap open penalty [default: 6]", 
                "min": null, 
                "default": 6, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "gap_open_penalty_deletion", 
                "condition": null, 
                "name": "Gap open penalty for deletions and insertions."
            }, 
            {
                "category": "Algorithm options", 
                "description": "Gap open penalty [default: 6]", 
                "min": null, 
                "default": 6, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "gap_open_penalty_insertion", 
                "condition": null, 
                "name": "Gap open penalty for deletions and insertions."
            }, 
            {
                "category": "Algorithm options", 
                "description": "Gap extension penalty. A gap of length k costs O + k*E (i.e. -O is for opening a zero-length gap). [default: 1]", 
                "min": null, 
                "default": 1, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "gap_extension_penalty_deletion", 
                "condition": null, 
                "name": "Gap extension penalty."
            }, 
            {
                "category": "Algorithm options", 
                "description": "Gap extension penalty. A gap of length k costs O + k*E (i.e. -O is for opening a zero-length gap). [default: 1]", 
                "min": null, 
                "default": 1, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "gap_extension_penalty_insertion", 
                "condition": null, 
                "name": "Gap extension penalty."
            }, 
            {
                "category": "Algorithm options", 
                "description": "When performing SW extension, BWA-MEM keeps track of the best score reaching the end of query. If this score is larger than the best SW score minus the clipping penalty, clipping will not be applied. Note that in this case, the SAM AS tag reports the best SW score; clipping penalty is not deducted. [default: 5]", 
                "min": null, 
                "default": 5, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "clipping_penalty_deletion", 
                "condition": null, 
                "name": "Clipping penalty."
            }, 
            {
                "category": "Algorithm options", 
                "description": "When performing SW extension, BWA-MEM keeps track of the best score reaching the end of query. If this score is larger than the best SW score minus the clipping penalty, clipping will not be applied. Note that in this case, the SAM AS tag reports the best SW score; clipping penalty is not deducted. [default: 5]", 
                "min": null, 
                "default": 5, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "clipping_penalty_insertion", 
                "condition": null, 
                "name": "Clipping penalty."
            }, 
            {
                "category": "Algorithm options", 
                "description": "BWA-MEM scores an unpaired read pair as scoreRead1+scoreRead2-INT and scores a paired as scoreRead1+scoreRead2-insertPenalty. It compares these two scores to determine whether we should force pairing. [default: 17]", 
                "min": null, 
                "default": 17, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "unpaired_penalty", 
                "condition": null, 
                "name": "Penalty for an unpaired read pair."
            }, 
            {
                "category": "Algorithm options", 
                "description": "Read type. Setting -x changes multiple parameters unless overridden [null].pacbio: -k17 -W40 -c1000 -r10 -A2 -B5 -O2 -E1 -L0pbread: -k13 -W40 -c1000 -r10 -A2 -B5 -O2 -E1 -N25 -FeaD.001", 
                "default": "None", 
                "required": false, 
                "list": false, 
                "values": [
                    [
                        "None", 
                        "None", 
                        "None"
                    ], 
                    [
                        "pacbio", 
                        "Pacbio", 
                        "Pacbio"
                    ], 
                    [
                        "pbread", 
                        "Pbread", 
                        "Pbread"
                    ]
                ], 
                "type": "enum", 
                "id": "read_type", 
                "condition": null, 
                "name": "Read type"
            }, 
            {
                "category": "Input/output options", 
                "description": "Assume the first input query file is interleaved paired-end FASTA/Q. See the command description for details.", 
                "default": false, 
                "required": false, 
                "list": false, 
                "type": "boolean", 
                "id": "interleaved", 
                "condition": null, 
                "name": "First query file consists of interleaved paired-end sequences."
            }, 
            {
                "category": "Input/output options", 
                "description": "If #hits < INT, output all in the XA tag", 
                "min": null, 
                "default": 5, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "xa_tag", 
                "condition": null, 
                "name": "XA tag"
            }, 
            {
                "category": "Read group", 
                "description": "Specify the read group in a format like '@RG\\tID:foo\\tSM:bar'. This value takes precedence over per-attribute parameters. [default: constructed from per-attribute parameters or inferred from metadata]", 
                "default": null, 
                "pattern": null, 
                "required": false, 
                "list": false, 
                "type": "string", 
                "id": "rg_tag", 
                "condition": null, 
                "name": "Complete read group header line."
            }, 
            {
                "category": "Read group", 
                "description": "Specify the sequencing technology for RG line. [default: inferred from metadata]", 
                "default": null, 
                "required": false, 
                "list": false, 
                "values": [
                    [
                        "454", 
                        "454", 
                        "454"
                    ], 
                    [
                        "Helicos", 
                        "Helicos", 
                        "Helicos"
                    ], 
                    [
                        "Illumina", 
                        "Illumina", 
                        "Illumina"
                    ], 
                    [
                        "Solid", 
                        "Solid", 
                        "Solid"
                    ], 
                    [
                        "IonTorrent", 
                        "Iontorrent", 
                        "Iontorrent"
                    ]
                ], 
                "type": "enum", 
                "id": "rg_seq_tech", 
                "condition": null, 
                "name": "Sequencing technology"
            }, 
            {
                "category": "Read group", 
                "description": "Specify the sample ID for RG line. [default: inferred from metadata]", 
                "default": null, 
                "pattern": null, 
                "required": false, 
                "list": false, 
                "type": "string", 
                "id": "rg_sample", 
                "condition": null, 
                "name": "Sample"
            }, 
            {
                "category": "Read group", 
                "description": "Specify the library for RG line. [default: inferred from metadata]", 
                "default": null, 
                "pattern": null, 
                "required": false, 
                "list": false, 
                "type": "string", 
                "id": "rg_library", 
                "condition": null, 
                "name": "Library"
            }, 
            {
                "category": "Read group", 
                "description": "Specify the platform unit (lane/slide) for RG line. [default: inferred from metadata]", 
                "default": null, 
                "pattern": null, 
                "required": false, 
                "list": false, 
                "type": "string", 
                "id": "rg_platform_unit", 
                "condition": null, 
                "name": "Platform unit"
            }, 
            {
                "category": "Read group", 
                "description": "Specify the sequencing center for RG line.", 
                "default": null, 
                "pattern": null, 
                "required": false, 
                "list": false, 
                "type": "string", 
                "id": "rg_seq_center", 
                "condition": null, 
                "name": "Sequencing center"
            }, 
            {
                "category": "Read group", 
                "description": "Specify the median fragment length for RG line.", 
                "min": null, 
                "default": null, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "rg_mfl", 
                "condition": null, 
                "name": "Median fragment length"
            }, 
            {
                "category": "Input/output options", 
                "description": "Minimum score to output [default: 30]", 
                "min": null, 
                "default": 30, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "score_threshold", 
                "condition": null, 
                "name": "Score threshold"
            }, 
            {
                "category": "Input/output options", 
                "description": "Output all found alignments for single-end or unpaired paired-end reads. These alignments will be flagged as secondary alignments.", 
                "default": false, 
                "required": false, 
                "list": false, 
                "type": "boolean", 
                "id": "out_all", 
                "condition": null, 
                "name": "Output all alignments for SE or unpaired PE."
            }, 
            {
                "category": "Input/output options", 
                "description": "This option can be used to transfer read meta information (e.g. barcode) to the SAM output. Note that the FASTA/Q comment (the string after a space in the header line) must conform the SAM spec (e.g. BC:Z:CGTAC). Malformatted comments lead to incorrect SAM output.",
                "default": false, 
                "required": false, 
                "list": false, 
                "type": "boolean", 
                "id": "append_meta", 
                "condition": null, 
                "name": "Append append FASTA/Q comment to SAM output."
            }, 
            {
                "category": "Input/output options", 
                "description": "This option may dramatically reduce the redundancy of output when mapping long contig or BAC sequences.", 
                "default": false, 
                "required": false, 
                "list": false, 
                "type": "boolean", 
                "id": "hard_clip", 
                "condition": null, 
                "name": "Use hard clipping H in the SAM output."
            }, 
            {
                "category": "Input/output options", 
                "description": "Mark shorter split hits as secondary (for Picard compatibility).", 
                "default": true, 
                "required": false, 
                "list": false, 
                "type": "boolean", 
                "id": "mark_short", 
                "condition": null, 
                "name": "Mark shorter split hits as secondary."
            }, 
            {
                "category": "Advanced", 
                "description": "Set to true if high memory instance should be used.", 
                "default": true, 
                "required": false, 
                "list": false, 
                "type": "boolean", 
                "id": "wgs", 
                "condition": null, 
                "name": "High memory"
            }, 
            {
                "category": "Advanced", 
                "description": "Select format to output. Sorted BAM option will output coordinate sorted BAM.", 
                "default": "BAM", 
                "required": false, 
                "list": false, 
                "values": [
                    [
                        "SAM", 
                        "SAM", 
                        "SAM"
                    ], 
                    [
                        "BAM", 
                        "BAM", 
                        "BAM"
                    ], 
                    [
                        "Sorted BAM", 
                        "Sorted bam", 
                        "Sorted bam"
                    ]
                ], 
                "type": "enum", 
                "id": "bam_output", 
                "condition": null, 
                "name": "Output format"
            }
        ], 
        "outputs": [
            {
                "description": "Aligned sequence in SAM format", 
                "required": false, 
                "list": true, 
                "id": "aligned", 
                "types": [
                    "sam", 
                    "bam"
                ], 
                "name": "Aligned SAM"
            }
        ]
    }
}
