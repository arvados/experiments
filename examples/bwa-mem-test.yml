tools:
  bwa-mem:
    softwareDescription: {}
    documentAuthor: boysha
    requirements:
      environment:
        container:
          type: docker
          uri: "docker://images.example.org/user/repo#tag"  # or docker:user/repo#tag for main index
          imageId: asd
      resources:
        cpu:
          $expr: "{return job.allocatedResources.mem / 1000;}"
        mem: 5000
        network: No
    inputs:
      type: object
      required: [reference, reads]
      properties:
        reference:
          type: file
          adapter:
            order: 2
            transform: self.path.split('.').reverse().splice(1).reverse().join('.')
        reads:
          type: array
          minItems: 1
          maxItems: 2
          items:
            type: file
            adapter:
              streamable: Yes
        minimum_seed_length:
          type: integer
          adapter:
            order: 1
            prefix: "-m"
            separator: " " # default, separate args
        min_std_max_min:
          type: array
          minItems: 1
          maxItems: 4
          items:
            type: number
          adapter:
            order: 1
            prefix: "-I"
            itemSeparator: ","
    outputs:
      type: object
      required: [sam]
      properties:
        sam:
          type: file
          adapter:
            glob: output.sam
            streamable: Yes
    adapter:
      baseCmd: [bwa, mem]
      stdout: output.sam
      args:
        - order: 1
          prefix: "-t"
          value:
            $expr: job['allocatedResources']['cpu']


tests:
  - id: bwa-mem-test-1
    test_job:
      inputs: # dict that matches the schema defined in tool
        reference:
          path: hg19.fasta
          size: 123
          checksum: sha1$hash
          secondaryFiles:
            bwa_index:
              path: hg19.bwa_index
              size: 123
              checksum: md5$hash
            .fai:
              path: hg19.fasta.fai
              size: 123
              checksum: md5$hash
            dict:
              path: hg19.dict
              size: 123
              checksum: md5$hash
        reads:
          - path: sample_pe1.fq
            size: 123
            checksum: md5$hash
          - path: sample_pe2.fq
            size: 123
            checksum: md5$hash
        min_std_max_min: [1, 2, 3, 4]
      platform: "http://example.org/my_platform/v1"
      allocatedResources:
        mem: 4000
        ports: []
        diskSpace: 20000
        network: No
    tool:
      $ref: "#tools/bwa-mem"
    expected_cmd_line: bwa mem -I 1,2,3,4 -t 4 hg19 sample_pe1.fq sample_pe2.fq > output.sam




